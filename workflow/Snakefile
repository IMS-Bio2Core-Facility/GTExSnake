configfile: "config/config.yaml"


container: "docker://condaforge/mambaforge:4.10.1-0"


rule all:
    input:
        expand("results/process/{gene}_isoforms.csv", gene=config["gene_ids"]),


rule ids:
    params:
        url=config["gencode_url"],
    output:
        lut="resources/gencode.v26.annotation",
    log:
        "logs/ids.log",
    benchmark:
        "benchmarks/ids.txt"
    shell:
        "wget -qO- {params.url} | "
        "gzip -dc | "
        "grep -w gene | "
        "cut -f9 | "
        "cut -d ' ' -f2,6 | "
        "tr -d ';\"' "
        "> {output.lut} "
        "2> {log}"


rule mane:
    params:
        url=config["mane_url"],
    output:
        data="resources/MANE.csv",
    log:
        "logs/mane.log",
    benchmark:
        "benchmarks/mane.txt"
    conda:
        "envs/mane.yaml"
    script:
        "scripts/mane.py"


rule request:
    input:
        lut="resources/gencode.v26.annotation",
    params:
        gene_ids=config["gene_ids"],
        region=config["region"],
    output:
        data=expand("results/request/{gene}_message.csv", gene=config["gene_ids"]),
    log:
        "logs/request.log",
    benchmark:
        "benchmarks/request.txt"
    threads: workflow.cores
    conda:
        "envs/request.yaml"
    script:
        "scripts/request.py"


rule biomart:
    input:
        data=expand("results/request/{gene}_message.csv", gene=config["gene_ids"]),
    output:
        data=expand("results/biomart/{gene}_message.csv", gene=config["gene_ids"]),
    log:
        "logs/biomart.log",
    benchmark:
        "benchmarks/biomart.txt"
    threads: workflow.cores
    conda:
        "envs/biomart.yaml"
    script:
        "scripts/biomart.py"


rule process:
    input:
        gtex=expand("results/request/{gene}_message.csv", gene=config["gene_ids"]),
        bm=expand("results/biomart/{gene}_message.csv", gene=config["gene_ids"]),
        mane="resources/MANE.csv",
    output:
        data=expand("results/process/{gene}_isoforms.csv", gene=config["gene_ids"]),
    log:
        "logs/process.log",
    benchmark:
        "benchmarks/process.txt"
    threads: workflow.cores
    conda:
        "envs/process.yaml"
    script:
        "scripts/process.py"
